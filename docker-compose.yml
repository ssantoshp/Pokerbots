version: "3.9"
services:
  # Postgres database
  db:
    extends:
      file: common-compose.yml
      service: db
  # Frontend and backend
  website:
    image: ghcr.io/alexwaeseperlman/upac_website${IMAGE_SUFFIX}
    build:
      context: .
      dockerfile: ./website/Dockerfile
    depends_on:
      - db
      - sqs
    extends:
      file: common-compose.yml
      service: website
  gameplay:
    image: ghcr.io/alexwaeseperlman/upac_gameplay${IMAGE_SUFFIX}
    build:
      context: .
      dockerfile: ./workers/gameplay/Dockerfile
    privileged: true
    depends_on:
      - sqs
    restart: always
    extends:
      file: common-compose.yml
      service: gameplay
    init: true
  builder:
    image: ghcr.io/alexwaeseperlman/upac_builder${IMAGE_SUFFIX}
    build:
      context: .
      dockerfile: ./workers/builder/Dockerfile
    privileged: true
    depends_on:
      - sqs
    restart: always
    extends:
      file: common-compose.yml
      service: builder
    init: true
  results:
    image: ghcr.io/alexwaeseperlman/upac_results${IMAGE_SUFFIX}
    build:
      context: .
      dockerfile: ./workers/results/Dockerfile
    depends_on:
      - db
      - sqs
    restart: always
    extends:
      file: common-compose.yml
      service: results
  s3:
    extends:
      file: common-compose.yml
      service: s3
  createbuckets:
    depends_on:
      - s3
    extends:
      file: common-compose.yml
      service: createbuckets

  sqs:
    extends:
      file: common-compose.yml
      service: sqs

  nginx:
    extends:
      file: common-compose.yml
      service: nginx
    volumes:
      - ./nginx.conf.template:/nginx.conf.template:ro
    depends_on:
      - sqs
      - s3
    ports:
      - 80:80
      - 443:443
  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  certbot:
    image: certbot/certbot
    volumes:
      - ./.volumes/certbot/conf:/etc/letsencrypt
      - ./.volumes/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  database:
    external: false
  minio:
    external: false
